syntax = "v1"

info(
	title: "社交服务"
	desc: "社交服务"
	author: "px"
	email: "1780759836@qq.com"
	version: "1.0"
)

type User {
	Id               int64  `json:"id"`
	Username         string `json:"username"`
	Follow_count     int64  `json:"follow_count"`
	Follower_count   int64  `json:"follower_count"`
	Is_follow        bool   `json:"is_follow"`
	Avatar           string `json:"avatar"`
	Background_image string `json:"background_image"`
	Signature        string `json:"signature"`
	Total_favorited  int64  `json:"total_favorited"`
	Work_count       int64  `json:"work_count"`
	Favorite_count   int64  `json:"favorite_count"`
}

//关注
type (
	ActionReq {
		ToUserId   int64 `json:"to_user_id"`
		ActionType int32 `json:"action_type"`
	}
	ActionResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
	}
)

//查看关注列表
type (
	FollowListReq {
		//不需要了 直接从ctx里面拿用户ID
		//UserId int64 `json:"user_id"`
	}
	FollowListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		UserList   []User `json:"user_list"`
	}
)

//查看粉丝列表
type (
	FollowerListReq {
		//不需要了 直接从ctx里面拿用户ID
		//UserId int64 `json:"user_id"`
	}
	FollowerListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		UserList   []User `json:"user_list"`
	}
)

//查看好友列表
type (
	FriendsListReq {
		//UserId int64 `json:"user_id"`
	}
	FriendsListResp {
		StatusCode int32  `json:"status_code"`
		StatusMsg  string `json:"status_msg"`
		UserList   []User `json:"user_list"`
	}
)

//所有跟用户有关的都需要Jwt认证
@server(
	prefix: douyin/relation
	jwt: JwtAuth
)

service social{
	
	@handler  relationaction
	post /action (ActionReq) returns(ActionResp)
	
	@handler followList
	post /follow/list (FollowListReq) returns(FollowListResp)
	
	@handler followerList
	post /follower/list (FollowerListReq) returns(FollowerListResp)
	
	@handler FriendsList
	post /friend/list (FriendsListReq) returns(FriendsListResp)
	
}